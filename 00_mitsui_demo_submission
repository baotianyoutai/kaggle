{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "68e30fe0",
   "metadata": {
    "papermill": {
     "duration": 0.002608,
     "end_time": "2025-07-26T14:01:08.048559",
     "exception": false,
     "start_time": "2025-07-26T14:01:08.045951",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Mitsui_demo_submission"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "11df07f0",
   "metadata": {
    "papermill": {
     "duration": 0.001844,
     "end_time": "2025-07-26T14:01:08.053182",
     "exception": false,
     "start_time": "2025-07-26T14:01:08.051338",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### 1. main_code"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "c7871176",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-26T14:01:08.058858Z",
     "iopub.status.busy": "2025-07-26T14:01:08.058549Z",
     "iopub.status.idle": "2025-07-26T14:01:11.129868Z",
     "shell.execute_reply": "2025-07-26T14:01:11.128565Z"
    },
    "papermill": {
     "duration": 3.076124,
     "end_time": "2025-07-26T14:01:11.131621",
     "exception": false,
     "start_time": "2025-07-26T14:01:08.055497",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import os\n",
    "import pandas as pd\n",
    "import polars as pl\n",
    "\n",
    "from kaggle_evaluation import mitsui_inference_server"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "cb03e062",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-26T14:01:11.137296Z",
     "iopub.status.busy": "2025-07-26T14:01:11.136878Z",
     "iopub.status.idle": "2025-07-26T14:01:26.201679Z",
     "shell.execute_reply": "2025-07-26T14:01:26.200723Z"
    },
    "papermill": {
     "duration": 15.077562,
     "end_time": "2025-07-26T14:01:26.211450",
     "exception": false,
     "start_time": "2025-07-26T14:01:11.133888",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\"\"\"\n",
    "The evaluation API requires that you set up a server which will respond to inference requests.\n",
    "We have already defined the server; you just need write the predict function.\n",
    "When we evaluate your submission on the hidden test set the client defined in `mitsui_gateway` will run in a different container\n",
    "with direct access to the hidden test set and hand off the data timestep by timestep.\n",
    "\n",
    "Your code will always have access to the published copies of the competition files.\n",
    "\"\"\"\n",
    "\n",
    "NUM_TARGET_COLUMNS = 424\n",
    "\n",
    "def predict(\n",
    "    test: pl.DataFrame,\n",
    "    label_lags_1_batch: pd.DataFrame,\n",
    "    label_lags_2_batch: pd.DataFrame,\n",
    "    label_lags_3_batch: pd.DataFrame,\n",
    "    label_lags_4_batch: pd.DataFrame,\n",
    ") -> pl.DataFrame | pd.DataFrame:\n",
    "    \"\"\"Replace this function with your inference code.\n",
    "    You can return either a Pandas or Polars dataframe, though Polars is recommended for performance.\n",
    "    Each batch of predictions (except the very first) must be returned within 1 minute of the batch features being provided.\n",
    "    \"\"\"\n",
    "    predictions = pl.DataFrame({f\"target_{i}\": i / 1000 for i in range(NUM_TARGET_COLUMNS)})\n",
    "    assert isinstance(predictions, (pd.DataFrame, pl.DataFrame))\n",
    "    assert len(predictions) == 1\n",
    "    return predictions\n",
    "\n",
    "# When your notebook is run on the hidden test set, inference_server.serve must be called within 15 minutes of the notebook starting\n",
    "# or the gateway will throw an error. If you need more than 15 minutes to load your model you can do so during the very\n",
    "# first `predict` call, which does not have the usual 1 minute response deadline.\n",
    "\n",
    "inference_server = mitsui_inference_server.MitsuiInferenceServer(predict)\n",
    "\n",
    "if os.getenv(\"KAGGLE_IS_COMPETITION_RERUN\"):\n",
    "    inference_server.serve()\n",
    "else:\n",
    "    inference_server.run_local_gateway(('/kaggle/input/mitsui-commodity-prediction-challenge/',))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "558ef9a6",
   "metadata": {
    "papermill": {
     "duration": 0.001825,
     "end_time": "2025-07-26T14:01:26.215720",
     "exception": false,
     "start_time": "2025-07-26T14:01:26.213895",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### 2. variables / output contents"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "bb56610c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-26T14:01:26.220739Z",
     "iopub.status.busy": "2025-07-26T14:01:26.220403Z",
     "iopub.status.idle": "2025-07-26T14:01:26.239917Z",
     "shell.execute_reply": "2025-07-26T14:01:26.239027Z"
    },
    "papermill": {
     "duration": 0.023664,
     "end_time": "2025-07-26T14:01:26.241222",
     "exception": false,
     "start_time": "2025-07-26T14:01:26.217558",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><style>\n",
       ".dataframe > thead > tr,\n",
       ".dataframe > tbody > tr {\n",
       "  text-align: right;\n",
       "  white-space: pre-wrap;\n",
       "}\n",
       "</style>\n",
       "<small>shape: (1, 424)</small><table border=\"1\" class=\"dataframe\"><thead><tr><th>target_0</th><th>target_1</th><th>target_2</th><th>target_3</th><th>target_4</th><th>target_5</th><th>target_6</th><th>target_7</th><th>target_8</th><th>target_9</th><th>target_10</th><th>target_11</th><th>target_12</th><th>target_13</th><th>target_14</th><th>target_15</th><th>target_16</th><th>target_17</th><th>target_18</th><th>target_19</th><th>target_20</th><th>target_21</th><th>target_22</th><th>target_23</th><th>target_24</th><th>target_25</th><th>target_26</th><th>target_27</th><th>target_28</th><th>target_29</th><th>target_30</th><th>target_31</th><th>target_32</th><th>target_33</th><th>target_34</th><th>target_35</th><th>target_36</th><th>&hellip;</th><th>target_387</th><th>target_388</th><th>target_389</th><th>target_390</th><th>target_391</th><th>target_392</th><th>target_393</th><th>target_394</th><th>target_395</th><th>target_396</th><th>target_397</th><th>target_398</th><th>target_399</th><th>target_400</th><th>target_401</th><th>target_402</th><th>target_403</th><th>target_404</th><th>target_405</th><th>target_406</th><th>target_407</th><th>target_408</th><th>target_409</th><th>target_410</th><th>target_411</th><th>target_412</th><th>target_413</th><th>target_414</th><th>target_415</th><th>target_416</th><th>target_417</th><th>target_418</th><th>target_419</th><th>target_420</th><th>target_421</th><th>target_422</th><th>target_423</th></tr><tr><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>&hellip;</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td></tr></thead><tbody><tr><td>0.0</td><td>0.001</td><td>0.002</td><td>0.003</td><td>0.004</td><td>0.005</td><td>0.006</td><td>0.007</td><td>0.008</td><td>0.009</td><td>0.01</td><td>0.011</td><td>0.012</td><td>0.013</td><td>0.014</td><td>0.015</td><td>0.016</td><td>0.017</td><td>0.018</td><td>0.019</td><td>0.02</td><td>0.021</td><td>0.022</td><td>0.023</td><td>0.024</td><td>0.025</td><td>0.026</td><td>0.027</td><td>0.028</td><td>0.029</td><td>0.03</td><td>0.031</td><td>0.032</td><td>0.033</td><td>0.034</td><td>0.035</td><td>0.036</td><td>&hellip;</td><td>0.387</td><td>0.388</td><td>0.389</td><td>0.39</td><td>0.391</td><td>0.392</td><td>0.393</td><td>0.394</td><td>0.395</td><td>0.396</td><td>0.397</td><td>0.398</td><td>0.399</td><td>0.4</td><td>0.401</td><td>0.402</td><td>0.403</td><td>0.404</td><td>0.405</td><td>0.406</td><td>0.407</td><td>0.408</td><td>0.409</td><td>0.41</td><td>0.411</td><td>0.412</td><td>0.413</td><td>0.414</td><td>0.415</td><td>0.416</td><td>0.417</td><td>0.418</td><td>0.419</td><td>0.42</td><td>0.421</td><td>0.422</td><td>0.423</td></tr></tbody></table></div>"
      ],
      "text/plain": [
       "shape: (1, 424)\n",
       "┌──────────┬──────────┬──────────┬──────────┬───┬────────────┬────────────┬────────────┬───────────┐\n",
       "│ target_0 ┆ target_1 ┆ target_2 ┆ target_3 ┆ … ┆ target_420 ┆ target_421 ┆ target_422 ┆ target_42 │\n",
       "│ ---      ┆ ---      ┆ ---      ┆ ---      ┆   ┆ ---        ┆ ---        ┆ ---        ┆ 3         │\n",
       "│ f64      ┆ f64      ┆ f64      ┆ f64      ┆   ┆ f64        ┆ f64        ┆ f64        ┆ ---       │\n",
       "│          ┆          ┆          ┆          ┆   ┆            ┆            ┆            ┆ f64       │\n",
       "╞══════════╪══════════╪══════════╪══════════╪═══╪════════════╪════════════╪════════════╪═══════════╡\n",
       "│ 0.0      ┆ 0.001    ┆ 0.002    ┆ 0.003    ┆ … ┆ 0.42       ┆ 0.421      ┆ 0.422      ┆ 0.423     │\n",
       "└──────────┴──────────┴──────────┴──────────┴───┴────────────┴────────────┴────────────┴───────────┘"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# preds image\n",
    "predictions = pl.DataFrame({f\"target_{i}\": i / 1000 for i in range(NUM_TARGET_COLUMNS)})\n",
    "predictions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "0d1ed07c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-26T14:01:26.246610Z",
     "iopub.status.busy": "2025-07-26T14:01:26.246336Z",
     "iopub.status.idle": "2025-07-26T14:01:26.251907Z",
     "shell.execute_reply": "2025-07-26T14:01:26.251032Z"
    },
    "papermill": {
     "duration": 0.009577,
     "end_time": "2025-07-26T14:01:26.253165",
     "exception": false,
     "start_time": "2025-07-26T14:01:26.243588",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<kaggle_evaluation.mitsui_inference_server.MitsuiInferenceServer at 0x782370df9590>"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# inference_server = mitsui_inference_server.MitsuiInferenceServer(predict)\n",
    "inference_server"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "d5fcacd9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-26T14:01:26.258937Z",
     "iopub.status.busy": "2025-07-26T14:01:26.258661Z",
     "iopub.status.idle": "2025-07-26T14:01:26.481576Z",
     "shell.execute_reply": "2025-07-26T14:01:26.480654Z"
    },
    "papermill": {
     "duration": 0.227736,
     "end_time": "2025-07-26T14:01:26.483270",
     "exception": false,
     "start_time": "2025-07-26T14:01:26.255534",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date_id</th>\n",
       "      <th>target_0</th>\n",
       "      <th>target_1</th>\n",
       "      <th>target_2</th>\n",
       "      <th>target_3</th>\n",
       "      <th>target_4</th>\n",
       "      <th>target_5</th>\n",
       "      <th>target_6</th>\n",
       "      <th>target_7</th>\n",
       "      <th>target_8</th>\n",
       "      <th>...</th>\n",
       "      <th>target_414</th>\n",
       "      <th>target_415</th>\n",
       "      <th>target_416</th>\n",
       "      <th>target_417</th>\n",
       "      <th>target_418</th>\n",
       "      <th>target_419</th>\n",
       "      <th>target_420</th>\n",
       "      <th>target_421</th>\n",
       "      <th>target_422</th>\n",
       "      <th>target_423</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1827</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.001</td>\n",
       "      <td>0.002</td>\n",
       "      <td>0.003</td>\n",
       "      <td>0.004</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.006</td>\n",
       "      <td>0.007</td>\n",
       "      <td>0.008</td>\n",
       "      <td>...</td>\n",
       "      <td>0.414</td>\n",
       "      <td>0.415</td>\n",
       "      <td>0.416</td>\n",
       "      <td>0.417</td>\n",
       "      <td>0.418</td>\n",
       "      <td>0.419</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.421</td>\n",
       "      <td>0.422</td>\n",
       "      <td>0.423</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1828</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.001</td>\n",
       "      <td>0.002</td>\n",
       "      <td>0.003</td>\n",
       "      <td>0.004</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.006</td>\n",
       "      <td>0.007</td>\n",
       "      <td>0.008</td>\n",
       "      <td>...</td>\n",
       "      <td>0.414</td>\n",
       "      <td>0.415</td>\n",
       "      <td>0.416</td>\n",
       "      <td>0.417</td>\n",
       "      <td>0.418</td>\n",
       "      <td>0.419</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.421</td>\n",
       "      <td>0.422</td>\n",
       "      <td>0.423</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1829</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.001</td>\n",
       "      <td>0.002</td>\n",
       "      <td>0.003</td>\n",
       "      <td>0.004</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.006</td>\n",
       "      <td>0.007</td>\n",
       "      <td>0.008</td>\n",
       "      <td>...</td>\n",
       "      <td>0.414</td>\n",
       "      <td>0.415</td>\n",
       "      <td>0.416</td>\n",
       "      <td>0.417</td>\n",
       "      <td>0.418</td>\n",
       "      <td>0.419</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.421</td>\n",
       "      <td>0.422</td>\n",
       "      <td>0.423</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1830</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.001</td>\n",
       "      <td>0.002</td>\n",
       "      <td>0.003</td>\n",
       "      <td>0.004</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.006</td>\n",
       "      <td>0.007</td>\n",
       "      <td>0.008</td>\n",
       "      <td>...</td>\n",
       "      <td>0.414</td>\n",
       "      <td>0.415</td>\n",
       "      <td>0.416</td>\n",
       "      <td>0.417</td>\n",
       "      <td>0.418</td>\n",
       "      <td>0.419</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.421</td>\n",
       "      <td>0.422</td>\n",
       "      <td>0.423</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1831</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.001</td>\n",
       "      <td>0.002</td>\n",
       "      <td>0.003</td>\n",
       "      <td>0.004</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.006</td>\n",
       "      <td>0.007</td>\n",
       "      <td>0.008</td>\n",
       "      <td>...</td>\n",
       "      <td>0.414</td>\n",
       "      <td>0.415</td>\n",
       "      <td>0.416</td>\n",
       "      <td>0.417</td>\n",
       "      <td>0.418</td>\n",
       "      <td>0.419</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.421</td>\n",
       "      <td>0.422</td>\n",
       "      <td>0.423</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85</th>\n",
       "      <td>1912</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.001</td>\n",
       "      <td>0.002</td>\n",
       "      <td>0.003</td>\n",
       "      <td>0.004</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.006</td>\n",
       "      <td>0.007</td>\n",
       "      <td>0.008</td>\n",
       "      <td>...</td>\n",
       "      <td>0.414</td>\n",
       "      <td>0.415</td>\n",
       "      <td>0.416</td>\n",
       "      <td>0.417</td>\n",
       "      <td>0.418</td>\n",
       "      <td>0.419</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.421</td>\n",
       "      <td>0.422</td>\n",
       "      <td>0.423</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>1913</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.001</td>\n",
       "      <td>0.002</td>\n",
       "      <td>0.003</td>\n",
       "      <td>0.004</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.006</td>\n",
       "      <td>0.007</td>\n",
       "      <td>0.008</td>\n",
       "      <td>...</td>\n",
       "      <td>0.414</td>\n",
       "      <td>0.415</td>\n",
       "      <td>0.416</td>\n",
       "      <td>0.417</td>\n",
       "      <td>0.418</td>\n",
       "      <td>0.419</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.421</td>\n",
       "      <td>0.422</td>\n",
       "      <td>0.423</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>1914</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.001</td>\n",
       "      <td>0.002</td>\n",
       "      <td>0.003</td>\n",
       "      <td>0.004</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.006</td>\n",
       "      <td>0.007</td>\n",
       "      <td>0.008</td>\n",
       "      <td>...</td>\n",
       "      <td>0.414</td>\n",
       "      <td>0.415</td>\n",
       "      <td>0.416</td>\n",
       "      <td>0.417</td>\n",
       "      <td>0.418</td>\n",
       "      <td>0.419</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.421</td>\n",
       "      <td>0.422</td>\n",
       "      <td>0.423</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>1915</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.001</td>\n",
       "      <td>0.002</td>\n",
       "      <td>0.003</td>\n",
       "      <td>0.004</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.006</td>\n",
       "      <td>0.007</td>\n",
       "      <td>0.008</td>\n",
       "      <td>...</td>\n",
       "      <td>0.414</td>\n",
       "      <td>0.415</td>\n",
       "      <td>0.416</td>\n",
       "      <td>0.417</td>\n",
       "      <td>0.418</td>\n",
       "      <td>0.419</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.421</td>\n",
       "      <td>0.422</td>\n",
       "      <td>0.423</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>1916</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.001</td>\n",
       "      <td>0.002</td>\n",
       "      <td>0.003</td>\n",
       "      <td>0.004</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.006</td>\n",
       "      <td>0.007</td>\n",
       "      <td>0.008</td>\n",
       "      <td>...</td>\n",
       "      <td>0.414</td>\n",
       "      <td>0.415</td>\n",
       "      <td>0.416</td>\n",
       "      <td>0.417</td>\n",
       "      <td>0.418</td>\n",
       "      <td>0.419</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.421</td>\n",
       "      <td>0.422</td>\n",
       "      <td>0.423</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>90 rows × 425 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    date_id  target_0  target_1  target_2  target_3  target_4  target_5  \\\n",
       "0      1827       0.0     0.001     0.002     0.003     0.004     0.005   \n",
       "1      1828       0.0     0.001     0.002     0.003     0.004     0.005   \n",
       "2      1829       0.0     0.001     0.002     0.003     0.004     0.005   \n",
       "3      1830       0.0     0.001     0.002     0.003     0.004     0.005   \n",
       "4      1831       0.0     0.001     0.002     0.003     0.004     0.005   \n",
       "..      ...       ...       ...       ...       ...       ...       ...   \n",
       "85     1912       0.0     0.001     0.002     0.003     0.004     0.005   \n",
       "86     1913       0.0     0.001     0.002     0.003     0.004     0.005   \n",
       "87     1914       0.0     0.001     0.002     0.003     0.004     0.005   \n",
       "88     1915       0.0     0.001     0.002     0.003     0.004     0.005   \n",
       "89     1916       0.0     0.001     0.002     0.003     0.004     0.005   \n",
       "\n",
       "    target_6  target_7  target_8  ...  target_414  target_415  target_416  \\\n",
       "0      0.006     0.007     0.008  ...       0.414       0.415       0.416   \n",
       "1      0.006     0.007     0.008  ...       0.414       0.415       0.416   \n",
       "2      0.006     0.007     0.008  ...       0.414       0.415       0.416   \n",
       "3      0.006     0.007     0.008  ...       0.414       0.415       0.416   \n",
       "4      0.006     0.007     0.008  ...       0.414       0.415       0.416   \n",
       "..       ...       ...       ...  ...         ...         ...         ...   \n",
       "85     0.006     0.007     0.008  ...       0.414       0.415       0.416   \n",
       "86     0.006     0.007     0.008  ...       0.414       0.415       0.416   \n",
       "87     0.006     0.007     0.008  ...       0.414       0.415       0.416   \n",
       "88     0.006     0.007     0.008  ...       0.414       0.415       0.416   \n",
       "89     0.006     0.007     0.008  ...       0.414       0.415       0.416   \n",
       "\n",
       "    target_417  target_418  target_419  target_420  target_421  target_422  \\\n",
       "0        0.417       0.418       0.419        0.42       0.421       0.422   \n",
       "1        0.417       0.418       0.419        0.42       0.421       0.422   \n",
       "2        0.417       0.418       0.419        0.42       0.421       0.422   \n",
       "3        0.417       0.418       0.419        0.42       0.421       0.422   \n",
       "4        0.417       0.418       0.419        0.42       0.421       0.422   \n",
       "..         ...         ...         ...         ...         ...         ...   \n",
       "85       0.417       0.418       0.419        0.42       0.421       0.422   \n",
       "86       0.417       0.418       0.419        0.42       0.421       0.422   \n",
       "87       0.417       0.418       0.419        0.42       0.421       0.422   \n",
       "88       0.417       0.418       0.419        0.42       0.421       0.422   \n",
       "89       0.417       0.418       0.419        0.42       0.421       0.422   \n",
       "\n",
       "    target_423  \n",
       "0        0.423  \n",
       "1        0.423  \n",
       "2        0.423  \n",
       "3        0.423  \n",
       "4        0.423  \n",
       "..         ...  \n",
       "85       0.423  \n",
       "86       0.423  \n",
       "87       0.423  \n",
       "88       0.423  \n",
       "89       0.423  \n",
       "\n",
       "[90 rows x 425 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "submission = pd.read_parquet(\"/kaggle/working/submission.parquet\")\n",
    "submission"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 13044405,
     "sourceId": 94771,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 31089,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 24.107413,
   "end_time": "2025-07-26T14:01:27.106726",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-07-26T14:01:02.999313",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
